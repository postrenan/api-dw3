{
  "openapi": "3.0.0",
  "info": {
    "title": "EstoqueApi",
    "version": "0.1.0",
    "description": "api do estoque"
  },
  "tags": [
    {
      "name": "user",
      "description": "User operations"
    },
    {
      "name": "item",
      "description": "Item operations"
    },
    {
      "name": "estoque",
      "description": "Estoque operations"
    },
    {
      "name": "categoria",
      "description": "Categoria operations"
    }
  ],
  "paths": {
    "/api/user": {
      "get": {
        "operationId": "list-User",
        "description": "List \"User\" resources",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/page-offset"
          },
          {
            "$ref": "#/components/parameters/page-limit"
          },
          {
            "name": "filter[id]",
            "required": false,
            "description": "Id filter",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "required": false,
            "description": "Equality filter for \"email\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email$contains]",
            "required": false,
            "description": "String contains filter for \"email\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email$icontains]",
            "required": false,
            "description": "String case-insensitive contains filter for \"email\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email$search]",
            "required": false,
            "description": "String full-text search filter for \"email\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email$startsWith]",
            "required": false,
            "description": "String startsWith filter for \"email\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email$endsWith]",
            "required": false,
            "description": "String endsWith filter for \"email\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "description": "Equality filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$contains]",
            "required": false,
            "description": "String contains filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$icontains]",
            "required": false,
            "description": "String case-insensitive contains filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$search]",
            "required": false,
            "description": "String full-text search filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$startsWith]",
            "required": false,
            "description": "String startsWith filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$endsWith]",
            "required": false,
            "description": "String endsWith filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[password]",
            "required": false,
            "description": "Equality filter for \"password\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[password$contains]",
            "required": false,
            "description": "String contains filter for \"password\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[password$icontains]",
            "required": false,
            "description": "String case-insensitive contains filter for \"password\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[password$search]",
            "required": false,
            "description": "String full-text search filter for \"password\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[password$startsWith]",
            "required": false,
            "description": "String startsWith filter for \"password\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[password$endsWith]",
            "required": false,
            "description": "String endsWith filter for \"password\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[createdAt]",
            "required": false,
            "description": "Equality filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$lt]",
            "required": false,
            "description": "Less-than filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$gt]",
            "required": false,
            "description": "Greater-than filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt]",
            "required": false,
            "description": "Equality filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$lt]",
            "required": false,
            "description": "Less-than filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$gt]",
            "required": false,
            "description": "Greater-than filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "operationId": "create-User",
        "description": "Create a \"User\" resource",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/user/{id}": {
      "get": {
        "operationId": "fetch-User",
        "description": "Fetch a \"User\" resource",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/include"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "operationId": "update-User-put",
        "description": "Update a \"User\" resource",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "patch": {
        "operationId": "update-User-patch",
        "description": "Update a \"User\" resource",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "operationId": "delete-User",
        "description": "Delete a \"User\" resource",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/item": {
      "get": {
        "operationId": "list-Item",
        "description": "List \"Item\" resources",
        "tags": [
          "item"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/page-offset"
          },
          {
            "$ref": "#/components/parameters/page-limit"
          },
          {
            "name": "filter[id]",
            "required": false,
            "description": "Id filter",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "description": "Equality filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$contains]",
            "required": false,
            "description": "String contains filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$icontains]",
            "required": false,
            "description": "String case-insensitive contains filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$search]",
            "required": false,
            "description": "String full-text search filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$startsWith]",
            "required": false,
            "description": "String startsWith filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name$endsWith]",
            "required": false,
            "description": "String endsWith filter for \"name\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "description": "Equality filter for \"description\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description$contains]",
            "required": false,
            "description": "String contains filter for \"description\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description$icontains]",
            "required": false,
            "description": "String case-insensitive contains filter for \"description\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description$search]",
            "required": false,
            "description": "String full-text search filter for \"description\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description$startsWith]",
            "required": false,
            "description": "String startsWith filter for \"description\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description$endsWith]",
            "required": false,
            "description": "String endsWith filter for \"description\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[qtd]",
            "required": false,
            "description": "Equality filter for \"qtd\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[qtd$lt]",
            "required": false,
            "description": "Less-than filter for \"qtd\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[qtd$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"qtd\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[qtd$gt]",
            "required": false,
            "description": "Greater-than filter for \"qtd\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[qtd$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"qtd\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[kgl]",
            "required": false,
            "description": "Equality filter for \"kgl\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter[kgl$lt]",
            "required": false,
            "description": "Less-than filter for \"kgl\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter[kgl$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"kgl\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter[kgl$gt]",
            "required": false,
            "description": "Greater-than filter for \"kgl\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter[kgl$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"kgl\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter[dataVal]",
            "required": false,
            "description": "Equality filter for \"dataVal\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[dataVal$lt]",
            "required": false,
            "description": "Less-than filter for \"dataVal\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[dataVal$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"dataVal\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[dataVal$gt]",
            "required": false,
            "description": "Greater-than filter for \"dataVal\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[dataVal$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"dataVal\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[perecivel]",
            "required": false,
            "description": "Equality filter for \"perecivel\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter[category]",
            "required": false,
            "description": "Equality filter for \"category\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[category$contains]",
            "required": false,
            "description": "String contains filter for \"category\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[category$icontains]",
            "required": false,
            "description": "String case-insensitive contains filter for \"category\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[category$search]",
            "required": false,
            "description": "String full-text search filter for \"category\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[category$startsWith]",
            "required": false,
            "description": "String startsWith filter for \"category\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[category$endsWith]",
            "required": false,
            "description": "String endsWith filter for \"category\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[createdAt]",
            "required": false,
            "description": "Equality filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$lt]",
            "required": false,
            "description": "Less-than filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$gt]",
            "required": false,
            "description": "Greater-than filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt]",
            "required": false,
            "description": "Equality filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$lt]",
            "required": false,
            "description": "Less-than filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$gt]",
            "required": false,
            "description": "Greater-than filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "operationId": "create-Item",
        "description": "Create a \"Item\" resource",
        "tags": [
          "item"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/item/{id}": {
      "get": {
        "operationId": "fetch-Item",
        "description": "Fetch a \"Item\" resource",
        "tags": [
          "item"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/include"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "operationId": "update-Item-put",
        "description": "Update a \"Item\" resource",
        "tags": [
          "item"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "patch": {
        "operationId": "update-Item-patch",
        "description": "Update a \"Item\" resource",
        "tags": [
          "item"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "operationId": "delete-Item",
        "description": "Delete a \"Item\" resource",
        "tags": [
          "item"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/estoque": {
      "get": {
        "operationId": "list-Estoque",
        "description": "List \"Estoque\" resources",
        "tags": [
          "estoque"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/page-offset"
          },
          {
            "$ref": "#/components/parameters/page-limit"
          },
          {
            "name": "filter[id]",
            "required": false,
            "description": "Id filter",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userId]",
            "required": false,
            "description": "Equality filter for \"userId\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userId$contains]",
            "required": false,
            "description": "String contains filter for \"userId\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userId$icontains]",
            "required": false,
            "description": "String case-insensitive contains filter for \"userId\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userId$search]",
            "required": false,
            "description": "String full-text search filter for \"userId\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userId$startsWith]",
            "required": false,
            "description": "String startsWith filter for \"userId\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userId$endsWith]",
            "required": false,
            "description": "String endsWith filter for \"userId\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[createdAt]",
            "required": false,
            "description": "Equality filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$lt]",
            "required": false,
            "description": "Less-than filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$gt]",
            "required": false,
            "description": "Greater-than filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt]",
            "required": false,
            "description": "Equality filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$lt]",
            "required": false,
            "description": "Less-than filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$gt]",
            "required": false,
            "description": "Greater-than filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EstoqueListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "operationId": "create-Estoque",
        "description": "Create a \"Estoque\" resource",
        "tags": [
          "estoque"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EstoqueCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EstoqueResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/estoque/{id}": {
      "get": {
        "operationId": "fetch-Estoque",
        "description": "Fetch a \"Estoque\" resource",
        "tags": [
          "estoque"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/include"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EstoqueResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "operationId": "update-Estoque-put",
        "description": "Update a \"Estoque\" resource",
        "tags": [
          "estoque"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EstoqueUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EstoqueResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "patch": {
        "operationId": "update-Estoque-patch",
        "description": "Update a \"Estoque\" resource",
        "tags": [
          "estoque"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EstoqueUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EstoqueResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "operationId": "delete-Estoque",
        "description": "Delete a \"Estoque\" resource",
        "tags": [
          "estoque"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/categoria": {
      "get": {
        "operationId": "list-Categoria",
        "description": "List \"Categoria\" resources",
        "tags": [
          "categoria"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/page-offset"
          },
          {
            "$ref": "#/components/parameters/page-limit"
          },
          {
            "name": "filter[id]",
            "required": false,
            "description": "Id filter",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[nome]",
            "required": false,
            "description": "Equality filter for \"nome\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[nome$contains]",
            "required": false,
            "description": "String contains filter for \"nome\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[nome$icontains]",
            "required": false,
            "description": "String case-insensitive contains filter for \"nome\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[nome$search]",
            "required": false,
            "description": "String full-text search filter for \"nome\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[nome$startsWith]",
            "required": false,
            "description": "String startsWith filter for \"nome\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[nome$endsWith]",
            "required": false,
            "description": "String endsWith filter for \"nome\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[createdAt]",
            "required": false,
            "description": "Equality filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$lt]",
            "required": false,
            "description": "Less-than filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$gt]",
            "required": false,
            "description": "Greater-than filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[createdAt$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"createdAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt]",
            "required": false,
            "description": "Equality filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$lt]",
            "required": false,
            "description": "Less-than filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$lte]",
            "required": false,
            "description": "Less-than or equal filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$gt]",
            "required": false,
            "description": "Greater-than filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "filter[updatedAt$gte]",
            "required": false,
            "description": "Greater-than or equal filter for \"updatedAt\"",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "operationId": "create-Categoria",
        "description": "Create a \"Categoria\" resource",
        "tags": [
          "categoria"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/categoria/{id}": {
      "get": {
        "operationId": "fetch-Categoria",
        "description": "Fetch a \"Categoria\" resource",
        "tags": [
          "categoria"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/include"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "operationId": "update-Categoria-put",
        "description": "Update a \"Categoria\" resource",
        "tags": [
          "categoria"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "patch": {
        "operationId": "update-Categoria-patch",
        "description": "Update a \"Categoria\" resource",
        "tags": [
          "categoria"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriaUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriaResponse"
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request is unprocessable due to validation errors",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "operationId": "delete-Categoria",
        "description": "Delete a \"Categoria\" resource",
        "tags": [
          "categoria"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource is not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/_errorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "_jsonapi": {
        "type": "object",
        "description": "An object describing the server’s implementation",
        "required": [
          "version"
        ],
        "properties": {
          "version": {
            "type": "string"
          }
        }
      },
      "_meta": {
        "type": "object",
        "description": "Meta information about the request or response",
        "properties": {
          "serialization": {
            "description": "Superjson serialization metadata"
          }
        },
        "additionalProperties": true
      },
      "_resourceIdentifier": {
        "type": "object",
        "description": "Identifier for a resource",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Resource type"
          },
          "id": {
            "type": "string",
            "description": "Resource id"
          }
        }
      },
      "_resource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/_resourceIdentifier"
          },
          {
            "type": "object",
            "description": "A resource with attributes and relationships",
            "properties": {
              "attributes": {
                "type": "object",
                "description": "Resource attributes"
              },
              "relationships": {
                "type": "object",
                "description": "Resource relationships"
              }
            }
          }
        ]
      },
      "_links": {
        "type": "object",
        "required": [
          "self"
        ],
        "description": "Links related to the resource",
        "properties": {
          "self": {
            "type": "string",
            "description": "Link for refetching the curent results"
          }
        }
      },
      "_pagination": {
        "type": "object",
        "description": "Pagination information",
        "required": [
          "first",
          "last",
          "prev",
          "next"
        ],
        "properties": {
          "first": {
            "type": "string",
            "description": "Link to the first page",
            "nullable": true
          },
          "last": {
            "type": "string",
            "description": "Link to the last page",
            "nullable": true
          },
          "prev": {
            "type": "string",
            "description": "Link to the previous page",
            "nullable": true
          },
          "next": {
            "type": "string",
            "description": "Link to the next page",
            "nullable": true
          }
        }
      },
      "_errors": {
        "type": "array",
        "description": "An array of error objects",
        "items": {
          "type": "object",
          "required": [
            "status",
            "code"
          ],
          "properties": {
            "status": {
              "type": "string",
              "description": "HTTP status"
            },
            "code": {
              "type": "string",
              "description": "Error code"
            },
            "prismaCode": {
              "type": "string",
              "description": "Prisma error code if the error is thrown by Prisma"
            },
            "title": {
              "type": "string",
              "description": "Error title"
            },
            "detail": {
              "type": "string",
              "description": "Error detail"
            },
            "reason": {
              "type": "string",
              "description": "Detailed error reason"
            },
            "zodErrors": {
              "type": "object",
              "additionalProperties": true,
              "description": "Zod validation errors if the error is due to data validation failure"
            }
          }
        }
      },
      "_errorResponse": {
        "type": "object",
        "required": [
          "errors"
        ],
        "description": "An error response",
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "errors": {
            "$ref": "#/components/schemas/_errors"
          }
        }
      },
      "User": {
        "type": "object",
        "description": "The \"User\" model",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        }
      },
      "UserCreateRequest": {
        "type": "object",
        "description": "Input for creating a \"User\"",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The \"User\" model",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "required": [
                  "email",
                  "name",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "description": "Input for updating a \"User\"",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The \"User\" model",
            "required": [
              "id",
              "type",
              "attributes"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "description": "Response for a \"User\"",
        "required": [
          "data"
        ],
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "object",
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_resource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/_links"
          }
        }
      },
      "UserListResponse": {
        "type": "object",
        "description": "Response for a list of \"User\"",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/User"
                },
                {
                  "type": "object",
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_resource"
            }
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_links"
              },
              {
                "$ref": "#/components/schemas/_pagination"
              }
            ]
          }
        }
      },
      "Item": {
        "type": "object",
        "description": "The \"Item\" model",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "qtd": {
                "type": "integer"
              },
              "kgl": {
                "type": "number"
              },
              "dataVal": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "perecivel": {
                "type": "boolean"
              },
              "category": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        }
      },
      "ItemCreateRequest": {
        "type": "object",
        "description": "Input for creating a \"Item\"",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The \"Item\" model",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "qtd",
                  "kgl",
                  "category"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "qtd": {
                    "type": "integer"
                  },
                  "kgl": {
                    "type": "number"
                  },
                  "dataVal": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "perecivel": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          }
        }
      },
      "ItemUpdateRequest": {
        "type": "object",
        "description": "Input for updating a \"Item\"",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The \"Item\" model",
            "required": [
              "id",
              "type",
              "attributes"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "qtd": {
                    "type": "integer"
                  },
                  "kgl": {
                    "type": "number"
                  },
                  "dataVal": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "perecivel": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          }
        }
      },
      "ItemResponse": {
        "type": "object",
        "description": "Response for a \"Item\"",
        "required": [
          "data"
        ],
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Item"
              },
              {
                "type": "object",
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_resource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/_links"
          }
        }
      },
      "ItemListResponse": {
        "type": "object",
        "description": "Response for a list of \"Item\"",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Item"
                },
                {
                  "type": "object",
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_resource"
            }
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_links"
              },
              {
                "$ref": "#/components/schemas/_pagination"
              }
            ]
          }
        }
      },
      "Estoque": {
        "type": "object",
        "description": "The \"Estoque\" model",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        }
      },
      "EstoqueCreateRequest": {
        "type": "object",
        "description": "Input for creating a \"Estoque\"",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The \"Estoque\" model",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "required": [
                  "userId"
                ],
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          }
        }
      },
      "EstoqueUpdateRequest": {
        "type": "object",
        "description": "Input for updating a \"Estoque\"",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The \"Estoque\" model",
            "required": [
              "id",
              "type",
              "attributes"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          }
        }
      },
      "EstoqueResponse": {
        "type": "object",
        "description": "Response for a \"Estoque\"",
        "required": [
          "data"
        ],
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Estoque"
              },
              {
                "type": "object",
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_resource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/_links"
          }
        }
      },
      "EstoqueListResponse": {
        "type": "object",
        "description": "Response for a list of \"Estoque\"",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Estoque"
                },
                {
                  "type": "object",
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_resource"
            }
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_links"
              },
              {
                "$ref": "#/components/schemas/_pagination"
              }
            ]
          }
        }
      },
      "Categoria": {
        "type": "object",
        "description": "The \"Categoria\" model",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "nome": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        }
      },
      "CategoriaCreateRequest": {
        "type": "object",
        "description": "Input for creating a \"Categoria\"",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The \"Categoria\" model",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "required": [
                  "nome"
                ],
                "properties": {
                  "nome": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          }
        }
      },
      "CategoriaUpdateRequest": {
        "type": "object",
        "description": "Input for updating a \"Categoria\"",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The \"Categoria\" model",
            "required": [
              "id",
              "type",
              "attributes"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          }
        }
      },
      "CategoriaResponse": {
        "type": "object",
        "description": "Response for a \"Categoria\"",
        "required": [
          "data"
        ],
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Categoria"
              },
              {
                "type": "object",
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_resource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/_links"
          }
        }
      },
      "CategoriaListResponse": {
        "type": "object",
        "description": "Response for a list of \"Categoria\"",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/_jsonapi"
          },
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Categoria"
                },
                {
                  "type": "object",
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_meta"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_resource"
            }
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_links"
              },
              {
                "$ref": "#/components/schemas/_pagination"
              }
            ]
          }
        }
      }
    },
    "parameters": {
      "id": {
        "name": "id",
        "in": "path",
        "description": "The resource id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "include": {
        "name": "include",
        "in": "query",
        "description": "Relationships to include",
        "required": false,
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "Fields to sort by",
        "required": false,
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "page-offset": {
        "name": "page[offset]",
        "in": "query",
        "description": "Offset for pagination",
        "required": false,
        "style": "form",
        "schema": {
          "type": "integer"
        }
      },
      "page-limit": {
        "name": "page[limit]",
        "in": "query",
        "description": "Limit for pagination",
        "required": false,
        "style": "form",
        "schema": {
          "type": "integer"
        }
      }
    },
    "securitySchemes": {
      "myBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "myBearer": []
    }
  ]
}